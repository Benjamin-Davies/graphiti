{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/equation-ast.ts","./src/app/equation-panel/equation-panel.component.ts","./src/app/equation-panel/equation-panel.component.html","./src/app/equation.ts","./src/app/equations.service.ts","./src/app/exec-equation.service.ts","./src/app/graph-view/graph-view.component.ts","./src/app/graph-view/graph-view.component.html","./src/app/parser.utils.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,gFAAyC;QACzC,4EAAiC;;6FDMpB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AACJ;AAEM;AACoC;AACZ;;AAehE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,0DAAW;SACZ;mIAIU,SAAS,mBAXlB,2DAAY;QACZ,+FAAsB;QACtB,mFAAkB,aAGlB,uEAAa;QACb,0DAAW;6FAKF,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,+FAAsB;oBACtB,mFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACD;AAEa;AAE/D,MAAM,WAAW;IACtB,YAA4B,QAAsB;QAAtB,aAAQ,GAAR,QAAQ,CAAc;IAAG,CAAC;IAE/C,MAAM,CAAC,KAAK,CAAC,GAAW;QAC7B,MAAM,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,GAAG,CAAC,IAAI,EAAE;YACZ,OAAO,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACnC;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CACF;AAYD,MAAM,OAAO,GAAwB,mDAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CACjD,8DAAQ,EAAE,EACV,6DAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CACtE,CAAC;AAMF,MAAM,WAAW,GAA4B,oDAAM,EAAE,CAAC,IAAI,CACxD,6DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,CAC9C,CAAC;AAGF,MAAM,cAAc,GAA+B,4DAAE,CAA6B,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC;AAGxG,MAAM,KAAK,GAAkB,+DAAK,CAAY,GAAG,CAAC,CAAC,uDAAS,CAAC,IAAI,CAAkB,CAAC,CAAC;AAOrF,MAAM,KAAK,GAAsB,KAAK,CAAC,IAAI,CACzC,8DAAI,CAAC,cAAc,CAAC,IAAI,CACtB,8DAAQ,EAAE,CACX,CAAC,EACF,6DAAG,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAC9D,CAAC;AAMF,MAAM,QAAQ,GAA4B,KAAK,CAAC,IAAI,CAClD,mEAAa,CAAC,GAAG,CAAC,EAClB,iEAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,CACzD,CAAC;AAMF,MAAM,IAAI,GAA4B,QAAQ,CAAC,IAAI,CACjD,8DAAQ,EAAE,EACV,iEAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CACrD,CAAC;AAQF,MAAM,SAAS,GAA0B,IAAI,CAAC,IAAI,CAChD,mEAAa,CAAC,GAAG,CAAC,EAClB,6DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC,CAClD,CAAC;;;;;;;;;;;;;ACvFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEX;;;;;;;ICAvC,oEACE;IAAA,2EACF;IADS,ySAA2B;IAAlC,4DACF;IAAA,4DAAI;;;IADK,0DAA2B;IAA3B,qFAA2B;;ADO7B,MAAM,sBAAsB;IAEjC,YAAmB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;IAAG,CAAC;IAElD,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,kDAAQ,EAAE,CAAC,CAAC;IAC7C,CAAC;;4FANU,sBAAsB;sGAAtB,sBAAsB;QCVnC,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QAEjB,8GACE;QAGF,oEACE;QAAA,4EAAgC;QAAxB,8IAAS,iBAAa,IAAC;QAAC,uEAAY;QAAA,4DAAS;QACvD,4DAAI;;QAND,0DAA4C;QAA5C,4FAA4C;;6FDQlC,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAA6C;AACd;AAExB,MAAM,QAAQ;IAqBnB;QAnBQ,UAAK,GAAW,EAAE,CAAC;QACnB,SAAI,GAAuB,IAAI,CAAC;QAExB,YAAO,GAAG,IAAI,4CAAO,EAAY,CAAC;IAgBnC,CAAC;IAdhB,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD,IAAW,IAAI,CAAC,IAAY;QAC1B,IAAI,CAAC,IAAI,GAAG,yDAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,IAAW,GAAG;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;CAIF;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACwC;AACd;;AAO9D,MAAM,gBAAgB;IAH7B;QAKU,eAAU,GAAwB,EAAE,CAAC;QAE7B,iBAAY,GAAG,IAAI,4CAAO,EAAuB,CAAC;KA4BnE;IA3BC,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3B,gEAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACzB,gEAAS,CAAC,CAAC,CAAC,EAAE,CAAC,+CAAE,CACf,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CACzB,CAAC,IAAI,CACJ,+DAAQ,CAAC,CAAC,GAAE,EAAC,CAAC,EACd,gEAAS,CAAC,CAAC,CAAC,CACb,CAAC,CACH;IACH,CAAC;IAED,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACD,IAAW,SAAS,CAAC,SAA8B;QACjD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED,WAAW,CAAC,QAAkB;QAC5B,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;IAChC,CAAC;;gFA9BU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAA2C;;AAWpC,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,YAAY,CAAC,QAAkB,EAAE,OAAgB;;QAC/C,MAAM,QAAQ,SAAG,QAAQ,CAAC,GAAG,0CAAE,QAAQ,CAAC;QACxC,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,EAAE,CAAC;SACX;QAED,oBAAoB;QACpB,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACvC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE9B,2CAA2C;QAC3C,2BAA2B;QAC3B,MAAM,UAAU,GAAG,EAAE,CAAC;QACtB,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,EAAE;gBAC7F,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aACxC;SACF;QACD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;QAED,0BAA0B;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAElD,+BAA+B;QAC/B,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;YAC5B,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,IAAa,EAAE,OAAgB;;QACtC,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,YAAY;gBACf,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YAClF,KAAK,SAAS;gBACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YACpF,KAAK,MAAM;gBACT,OAAO,CAAE,IAAiB,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;sBAC7C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YACjF,KAAK,YAAY;gBACf,aAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,mCAAI,GAAG,CAAC;YACpC,KAAK,QAAQ;gBACX,OAAQ,IAAmB,CAAC,KAAK,CAAC;YACpC;gBACE,MAAM,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;SAC5B;IACH,CAAC;;sFAtDU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmG;AAC7C;;;;;AAU/C,MAAM,kBAAkB;IAY7B,YAAoB,SAA2B,EAAU,YAAiC;QAAtE,cAAS,GAAT,SAAS,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAR1F,aAAQ,GAAoC,IAAI,CAAC;QAUjD,aAAQ,GAAwB,IAAI,CAAC;IAFyD,CAAC;IAP/F,IAAI,GAAG;;QACL,IAAI,WAAI,CAAC,QAAQ,0CAAE,MAAM,aAAK,IAAI,CAAC,MAAM,0CAAE,aAAa,GAAE;YACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC5D;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAKD,QAAQ;QACN,MAAM,MAAM,GAAG,sDAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC3C,MAAM,OAAO,GAAG,kDAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;IAClE,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IAED,MAAM;QACJ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,GAAG;YAAE,OAAO;QACjB,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;QACxD,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;QAE3D,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAEnC,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;YAC/C,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;YAC1B,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,IAAI,CAAC,EAAE;gBACpC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC9D,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC;gBACnC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aACpB;YACD,GAAG,CAAC,MAAM,EAAE,CAAC;SACd;IACH,CAAC;;oFAnDU,kBAAkB;kGAAlB,kBAAkB;;;;;;QCX/B,6EAAyB;;6FDWZ,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;kBAGE,uDAAS;mBAAC,QAAQ;;;;;;;;;;;;;;AEbrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAG7C,SAAS,QAAQ;IACtB,OAAO,CAAC,CAAC,EAAE,CACX,CAAC,6DAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CACtB,8DAAI,CACH,8DAAI,EAAG,CAAE,CAAC,CAAC,CAAC,CACZ,CAAC,CAAC,CAAC,CAAC;AACb,CAAC;AAEM,SAAS,aAAa,CAAI,SAAmC;IAClE,OAAO,CAAC,CAAC,EAAE,CACX,CAAC,6DAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7B,8DAAI,CACH,8DAAI,EACF,CACD,8DAAI,CAAE,CAAC,CAAC,CAAE,SAAS,CAAC,CAAC,CAAC,CACvB,CAAC,CAAC,CAAC,CAAC;AACb,CAAC;AAEM,SAAS,WAAW,CAAO,CAAkB;IAClD,OAAO,6DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACxD,CAAC;;;;;;;;;;;;;ACxBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent {}\n","<app-equation-panel></app-equation-panel>\n<app-graph-view></app-graph-view>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { EquationPanelComponent } from './equation-panel/equation-panel.component';\nimport { GraphViewComponent } from './graph-view/graph-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EquationPanelComponent,\n    GraphViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Parjser, digit, anyCharOf, letter } from 'parjs';\nimport { map, maybe, then, or } from 'parjs/combinators';\n\nimport { multiple, multipleSepBy, singleOrMap } from './parser.utils';\n\nexport class EquationAst {\n  constructor(public readonly rootNode: EquationNode) {}\n\n  public static parse(str: string): EquationAst | null {\n    const res = pEquation.parse(str);\n    if (res.isOk) {\n      return new EquationAst(res.value);\n    } else {\n      console.warn(res.value);\n      return null;\n    }\n  }\n}\n\nexport interface AstNode {\n  type: string;\n  value?: string | number;\n  children?: AstNode[];\n}\n\nexport interface NumberNode extends AstNode {\n  type: 'number',\n  value: number,\n}\nconst pNumber: Parjser<NumberNode> = digit(10).pipe(\n  multiple(),\n  map(digits => ({ type: 'number', value: parseInt(digits.join('')) })),\n);\n\nexport interface PronumeralNode extends AstNode {\n  type: 'pronumeral',\n  value: string,\n}\nconst pPronumeral: Parjser<PronumeralNode> = letter().pipe(\n  map(value => ({ type: 'pronumeral', value })),\n);\n\nexport type SubExpressionNode = NumberNode | PronumeralNode;\nconst pSubExpression: Parjser<SubExpressionNode> = or<PronumeralNode, NumberNode>(pNumber)(pPronumeral);\n\nexport type Sign = '+' | '-';\nconst pSign: Parjser<Sign> = maybe<Sign, '+'>('+')(anyCharOf('+-') as Parjser<Sign>);\n\nexport interface TermNode extends AstNode {\n  type: 'term',\n  sign: Sign,\n  children: SubExpressionNode[],\n}\nconst pTerm: Parjser<TermNode> = pSign.pipe(\n  then(pSubExpression.pipe(\n    multiple(),\n  )),\n  map(([sign, children]) => ({ type: 'term', sign, children })),\n);\n\nexport interface ProductNode extends AstNode {\n  type: 'product',\n  children: TermNode[],\n}\nconst pProduct: Parjser<ExpressionNode> = pTerm.pipe(\n  multipleSepBy('*'),\n  singleOrMap(children => ({ type: 'product', children })),\n);\n\nexport interface SumNode extends AstNode {\n  type: 'sum',\n  children: ExpressionNode[],\n}\nconst pSum: Parjser<ExpressionNode> = pProduct.pipe(\n  multiple(),\n  singleOrMap(children => ({ type: 'sum', children }))\n);\n\nexport type ExpressionNode = SumNode | ProductNode | TermNode;\n\nexport interface EquationNode extends AstNode {\n  type: 'equation',\n  children: ExpressionNode[],\n}\nconst pEquation: Parjser<EquationNode> = pSum.pipe(\n  multipleSepBy('='),\n  map(children => ({ type: 'equation', children })),\n);\n","import { Component, OnInit } from '@angular/core';\n\nimport { Equation } from '../equation';\nimport { EquationsService } from '../equations.service';\n\n@Component({\n  selector: 'app-equation-panel',\n  templateUrl: './equation-panel.component.html',\n  styleUrls: ['./equation-panel.component.styl']\n})\nexport class EquationPanelComponent {\n\n  constructor(public equations: EquationsService) {}\n\n  newEquation() {\n    this.equations.addEquation(new Equation());\n  }\n\n}\n","<h1>Graphiti</h1>\n\n<p *ngFor=\"let equation of equations.equations\">\n  <input [(ngModel)]=\"equation.text\" autofocus>\n</p>\n\n<p>\n  <button (click)=\"newEquation()\">New Equation</button>\n</p>\n","import { EquationAst } from './equation-ast';\nimport { Subject } from 'rxjs';\n\nexport class Equation {\n\n  private _text: string = '';\n  private _ast: EquationAst | null = null;\n\n  public readonly updates = new Subject<Equation>();\n\n  public get text(): string {\n    return this._text;\n  }\n  public set text(text: string) {\n    this._ast = EquationAst.parse(text);\n    this._text = text;\n\n    this.updates.next(this);\n  }\n\n  public get ast(): EquationAst | null {\n    return this._ast;\n  }\n\n  constructor() {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, merge, Observable, OperatorFunction, scheduled, of } from 'rxjs';\nimport { switchMap, startWith, map, mergeMap } from 'rxjs/operators';\n\nimport { Equation } from './equation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EquationsService {\n\n  private _equations: readonly Equation[] = [];\n\n  public readonly arrayUpdates = new Subject<readonly Equation[]>();\n  public get updates(): Observable<Equation | readonly Equation[]> {\n    return this.arrayUpdates.pipe(\n      startWith(this.equations),\n      switchMap(a => of(\n        ...a.map(e => e.updates),\n      ).pipe(\n        mergeMap(x=>x),\n        startWith(a)\n      ))\n    )\n  }\n\n  public get equations(): readonly Equation[] {\n    return this._equations;\n  }\n  public set equations(equations: readonly Equation[]) {\n    this._equations = equations;\n\n    this.arrayUpdates.next(equations);\n  }\n\n  addEquation(equation: Equation) {\n    const newEquations = Array.from(this.equations);\n    newEquations.push(equation);\n    this.equations = newEquations;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Equation } from './equation';\nimport { AstNode, NumberNode, TermNode } from './equation-ast';\n\nexport interface Context {\n  [key: string]: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExecEquationService {\n\n  constructor() { }\n\n  execEquation(equation: Equation, context: Context): Context {\n    const rootNode = equation.ast?.rootNode;\n    if (!rootNode) {\n      return {};\n    }\n\n    // Extract the parts\n    const exps = rootNode.children.slice();\n    const expression = exps.pop();\n\n    // TODO: replace with inverse functionality\n    // Get the result variables\n    const resultKeys = [];\n    for (const exp of exps) {\n      if (exp.type === 'term' && exp.children.length === 1 && exp.children[0].type === 'pronumeral') {\n        resultKeys.push(exp.children[0].value);\n      }\n    }\n    if (resultKeys.length === 0) {\n      resultKeys.push('y');\n    }\n\n    // Evaluate the expression\n    const result = this.evalNode(expression, context);\n\n    // Create the resultant context\n    const resultCtx = {};\n    for (const key of resultKeys) {\n      resultCtx[key] = result;\n    }\n\n    return resultCtx;\n  }\n\n  evalNode(node: AstNode, context: Context): number {\n    switch (node.type) {\n      case 'expression':\n        return node.children.reduce((sum, exp) => sum + this.evalNode(exp, context), 0);\n      case 'product':\n        return node.children.reduce((prod, exp) => prod * this.evalNode(exp, context), 1);\n      case 'term':\n        return ((node as TermNode).sign === '-' ? -1 : 1)\n          * node.children.reduce((prod, exp) => prod * this.evalNode(exp, context), 1);\n      case 'pronumeral':\n        return context[node.value] ?? NaN;\n      case 'number':\n        return (node as NumberNode).value;\n      default:\n        throw `IDK ${node.type}`;\n    }\n  }\n\n}\n","import { Component, AfterViewInit, ViewChild, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription, merge, fromEvent } from 'rxjs';\n\nimport { ExecEquationService } from '../exec-equation.service';\nimport { EquationsService } from '../equations.service';\n\n@Component({\n  selector: 'app-graph-view',\n  templateUrl: './graph-view.component.html',\n  styleUrls: ['./graph-view.component.styl']\n})\nexport class GraphViewComponent implements AfterViewInit, OnInit, OnDestroy {\n\n  @ViewChild('canvas') canvas: ElementRef<HTMLCanvasElement>;\n\n  ctxCache: CanvasRenderingContext2D | null = null;\n  get ctx(): CanvasRenderingContext2D {\n    if (this.ctxCache?.canvas !== this.canvas?.nativeElement) {\n      this.ctxCache = this.canvas.nativeElement.getContext('2d');\n    }\n    return this.ctxCache;\n  }\n\n  constructor(private equations: EquationsService, private execEquation: ExecEquationService) { }\n\n  subCache: Subscription | null = null;\n  ngOnInit(): void {\n    const resize = fromEvent(window, 'resize');\n    const updates = merge(this.equations.updates, resize);\n    this.subCache = updates.subscribe({ next: () => this.render() })\n  }\n\n  ngAfterViewInit(): void {\n    this.render();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subCache) {\n      this.subCache.unsubscribe();\n      this.subCache = null;\n    }\n  }\n\n  render(): void {\n    const ctx = this.ctx;\n    if (!ctx) return;\n    const width = ctx.canvas.width = ctx.canvas.clientWidth;\n    const height = ctx.canvas.height = ctx.canvas.clientHeight;\n\n    ctx.clearRect(0, 0, width, height);\n\n    for (const equation of this.equations.equations) {\n      ctx.strokeStyle = 'black';\n      ctx.beginPath();\n      for (let sx = 0; sx < width; sx += 5) {\n        const x = 6 * (sx / width) - 3;\n        const { y } = this.execEquation.execEquation(equation, { x });\n        const sy = (-y / 6 + 0.5) * height;\n        ctx.lineTo(sx, sy);\n      }\n      ctx.stroke();\n    }\n  }\n\n}\n","<canvas #canvas></canvas>\n","import { many, then, map } from 'parjs/combinators';\nimport { ParjsCombinator, ImplicitParjser } from 'parjs';\n\nexport function multiple<T>(): ParjsCombinator<T, T[]> {\n  return p =>\n  (map (([a, b]) => [a, ...b])\n       (then\n        (many () (p))\n        (p)))\n}\n\nexport function multipleSepBy<T>(separator: ImplicitParjser<unknown>): ParjsCombinator<T, T[]> {\n  return p =>\n  (map (([a, b]) =>\n        [a, ...b.map(([_, x]) => x)])\n       (then\n        (many\n         ()\n         (then (p) (separator)))\n        (p)))\n}\n\nexport function singleOrMap<A, B>(f: (arr: A[]) => B): ParjsCombinator<A[], A | B> {\n  return map(arr => arr.length === 1 ? arr[0] : f(arr));\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}